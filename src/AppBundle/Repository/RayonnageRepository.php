<?php

namespace AppBundle\Repository;

/**
 * RayonnageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class RayonnageRepository extends \Doctrine\ORM\EntityRepository
{
  /**
   * Calcule du nombre de rayonnages enregistrÃ©s
   *
   * Author: Delrodie AMOIKON
   * Date: 21/02/2017
   */
   public function getNombreRayonnage()
   {
       $qb = $this->createQueryBuilder('r')
           ->select('count(r.id)')
           //->where('r.statut', 1)
       ;

       $query = $qb->getQuery();

       $recup =  $query->getSingleScalarResult();

       // Si compteur est egal a 0 alors initialiser
       if ($recup < 10){
           $suffixe = $recup ;
           return $code = '00'.$suffixe;
       }
       elseif ($recup < 100) {
         $suffixe = $recup ;
         return $code = '0'.$suffixe;
       }
       else{
           return $code = $recup;
       }
   }

   /**
      * Recherche des rayonnages actifs
      *
      * Author: Delrodie AMOIKON
      * Date: 21/02/2017
      * Since: v1.0
      */
      public function getRayonnage()
      {
          $em = $this->getEntityManager();
          $qb = $em->createQuery('
              SELECT r
              FROM AppBundle:Rayonnage r
              WHERE r.statut = :stat
              ORDER BY r.libelle ASC
          ')
            ->setParameter('stat', 1)
          ;
          try {
              $result = $qb->getResult();

              return $result;

          } catch (NoResultException $e) {
              return $e;
          }
      }
}
