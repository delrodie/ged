<?php

namespace AppBundle\Repository;

/**
 * ProvisoireRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProvisoireRepository extends \Doctrine\ORM\EntityRepository
{
  /**
     * Recherche des rayonnages actifs
     *
     * Author: Delrodie AMOIKON
     * Date: 21/02/2017
     * Since: v1.0
     */
     public function getProvisoire()
     {
         $em = $this->getEntityManager();
         $qb = $em->createQuery('
             SELECT p
             FROM AppBundle:Provisoire p
             WHERE p.statut = :stat
             ORDER BY p.libelle ASC
         ')
           ->setParameter('stat', 1)
         ;
         try {
             $result = $qb->getResult();

             return $result;

         } catch (NoResultException $e) {
             return $e;
         }
     }

     /**
      * Calcule du nombre de cotes provisoires
      *
      * Author: Delrodie AMOIKON
      * Date: 25/02/2017
      */
      public function getNombreProvisoire()
      {
          $qb = $this->createQueryBuilder('p')
              ->select('count(p.id)')
              //->where('r.statut', 1)
          ;

          $query = $qb->getQuery();

          $recup =  $query->getSingleScalarResult();

          // Si compteur est egal a 0 alors initialiser
          if ($recup < 10){
              $suffixe = $recup ;
              return $code = '00'.$suffixe;
          }
          elseif ($recup < 100) {
            $suffixe = $recup ;
            return $code = '0'.$suffixe;
          }
          else{
              return $code = $recup;
          }
      }
}
